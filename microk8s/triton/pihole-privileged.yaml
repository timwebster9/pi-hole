apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole-privileged
  name: pihole-privileged
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole-privileged
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pihole-privileged
    spec:
      containers:
      - env:
        - name: TZ
          value: Europe/London
        image: pihole/pihole:4.3.2-1
        imagePullPolicy: IfNotPresent
        name: pihole-privileged
        ports:
        - containerPort: 53
          protocol: TCP
        - containerPort: 53
          protocol: UDP
        - containerPort: 67
          protocol: UDP
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        volumeMounts:
        - mountPath: /etc/pihole
          name: etc-pihole
        - mountPath: /etc/dnsmasq.d
          name: etc-dnsmasq
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 127.0.0.1
          - 1.1.1.1
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /data/pihole/privileged/etc-pihole
          type: ""
        name: etc-pihole
      - hostPath:
          path: /data/pihole/privileged/etc-dnsmasq.d
          type: ""
        name: etc-dnsmasq
---
kind: Service
apiVersion: v1
metadata:
  name: pihole-privileged-dnsudp
  namespace: default
spec:
  selector:
    app: pihole-privileged
  ports:
  - protocol: UDP
    port: 53
    name: dnsudp
    targetPort: 53
  type: LoadBalancer
  loadBalancerIP: 192.168.1.141
---
kind: Service
apiVersion: v1
metadata:
  name: pihole-privileged-web
  namespace: default
spec:
  selector:
    app: pihole-privileged
  ports:
  - protocol: TCP
    port: 80
    name: web
    targetPort: 80
  type: LoadBalancer
  loadBalancerIP: 192.168.1.143